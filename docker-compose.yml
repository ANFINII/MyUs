version: "3"

services:
  myus_backend:
    container_name: myus_backend
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./myus:/code
    env_file:
      - ./envs/django.env
    depends_on:
      - mysql
      - myus_redis
    ports:
      - "8056:8000"
    command: sh -c 'python manage.py runserver 127.0.0.1:8000 --settings config.settings.local'
    networks:
      - myus_network

  # myus_frontend:
  #   container_name: myus_frontend
  #   restart: always
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - frontend_build:/frontend/build
  #   ports:
  #     - "3056:3000"
  #   environment:
  #     - NODE_ENV=development
  #   networks:
  #     - myus_network

  # myus_nginx:
  #   container_name: myus_nginx
  #   image: nginx:latest
  #   build: ./nginx
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - myus_backend
  #     - myus_frontend
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/uwsgi_params:/etc/nginx/uwsgi_params
  #     - ./static:/static
  #   networks:
  #     - myus_network

  mysql:
    container_name: myus_mysql
    image: mysql:latest
    platform: linux/arm64/v8
    restart: always
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/db/my.cnf:/etc/mysql/conf.d/my.cnf
    env_file:
      - ./envs/mysql.env
    ports:
      - "3356:3306"
    command: mysqld --default-authentication-plugin=mysql_native_password --innodb_use_native_aio=0 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - myus_network

  myus_redis:
    container_name: myus_redis
    image: redis:5.0
    env_file:
      - ./envs/redis.env
    ports:
      - "6356:6379"
    command: redis-server --requirepass redis1234
    networks:
      - myus_network

networks:
  myus_network:
    driver: bridge
